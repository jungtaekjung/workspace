/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-01-02 07:10:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1735788019312L));
    _jspx_dependants.put("jar:file:/C:/taekwork/5_Server/community/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>17_시맨틱태그.html</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/main-style.css\">\r\n");
      out.write("    <script src=\"https://kit.fontawesome.com/5f900fff15.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <main>\r\n");
      out.write("        \r\n");
      out.write("        <header>\r\n");
      out.write("            <section>\r\n");
      out.write("                <a href=\"#\">\r\n");
      out.write("                    <img src=\"resources/images/logo.jpg\" id=\"main-logo\">\r\n");
      out.write("                </a>\r\n");
      out.write("            </section>\r\n");
      out.write("            \r\n");
      out.write("            <!-- 검색창 -->\r\n");
      out.write("            <section>\r\n");
      out.write("                <div class=\"search-area\">\r\n");
      out.write("                    \r\n");
      out.write("                    <!-- form 내부 input 태그 값을 서버 또는 페이지로 전달 -->\r\n");
      out.write("                    <form action=\"#\" name=\"search-form\">\r\n");
      out.write("                     \r\n");
      out.write("                        <!-- fieldset : form태그 내부에서 input을 종류별로 묶는 용도로 많이 사용 -->\r\n");
      out.write("                         <fieldset>\r\n");
      out.write("\r\n");
      out.write("                             \r\n");
      out.write("                             \r\n");
      out.write("                             <!-- form태그 내부 input은 name 속성이 존재해야 값 전달 가능함! -->\r\n");
      out.write("                             <input type=\"text\" name=\"query\" id=\"query\"\r\n");
      out.write("                             autocomplete=\"off\" placeholder=\"검색어를 입력해주세요\">\r\n");
      out.write("                             \r\n");
      out.write("                             <button id=\"search-btn\" class=\"fa-solid fa-magnifying-glass\"></button>\r\n");
      out.write("                         </fieldset>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            </section>\r\n");
      out.write("            \r\n");
      out.write("            <section></section>\r\n");
      out.write("        </header>\r\n");
      out.write("\r\n");
      out.write("        <nav>\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li><a href=\"#\">공지사항</a></li>\r\n");
      out.write("                    <li><a href=\"#\">자유 게시판</a></li>\r\n");
      out.write("                    <li><a href=\"#\">질문 게시판</a></li>\r\n");
      out.write("                    <li><a href=\"#\">FAQ</a></li>\r\n");
      out.write("                    <li><a href=\"#\">1:1문의</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("        </nav>\r\n");
      out.write("        <section class=\"content\">\r\n");
      out.write("            <section class=content-1>\r\n");
      out.write("            	\r\n");
      out.write("            	loginMember : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginMember}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("            	\r\n");
      out.write("            	<hr>\r\n");
      out.write("            	\r\n");
      out.write("            	message : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.message }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            </section>\r\n");
      out.write("\r\n");
      out.write("            <section class=\"content-2\">\r\n");
      out.write("            \r\n");
      out.write("            ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("            </section>\r\n");
      out.write("        </section>\r\n");
      out.write("    </main>\r\n");
      out.write("    <footer>\r\n");
      out.write("        <p>Copyright &copy; KH Information Educational Institute G-Class</p>\r\n");
      out.write("        <section>\r\n");
      out.write("            <a href=\"#\">프로젝트 소개</a>\r\n");
      out.write("            <span>|</span>\r\n");
      out.write("            <a href=\"#\">이용약관</a>\r\n");
      out.write("            <span>|</span>\r\n");
      out.write("            <a href=\"#\">개인정보처리방침</a>\r\n");
      out.write("            <span>|</span>\r\n");
      out.write("            <a href=\"#\">고객센터</a>\r\n");
      out.write("        \r\n");
      out.write("        </section>\r\n");
      out.write("    </footer>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("        시맨틱(Semantic, 의미) 태그 (의미있는 태그)\r\n");
      out.write("\r\n");
      out.write("        - 기존 영역 분할에 주로 사용되던 div, span 등의 태그는\r\n");
      out.write("        태그 이름만 봤을 때 나눈다는 것 이외의 의미를 파악할 수 없음\r\n");
      out.write("        -> 태그만 봤을 때 태그의 목적을 할 수 없어\r\n");
      out.write("           id 또는 class를 반드시 추가해야 했다.\r\n");
      out.write("\r\n");
      out.write("        이런 문제점을 해결하고자\r\n");
      out.write("        태그 이름만으로 어느정도 어떤 역할을 하는지 알 수 있고\r\n");
      out.write("        추가적으로 웹 접근성 향상에 도움이 되는\r\n");
      out.write("        시맨틱 태그가 추가됨 (HTML5)\r\n");
      out.write("\r\n");
      out.write("        [제공하는 태그]\r\n");
      out.write("\r\n");
      out.write("        header 태그 : 문서의 제목, 머리말 영역\r\n");
      out.write("\r\n");
      out.write("        footer 태그 : 문서의 하단부분, 꼬리말, 정보 작성 영역\r\n");
      out.write("\r\n");
      out.write("        nav 태그 : 나침반 역할(다른 페이지, 사이트 이동)의 링크 작성 영역\r\n");
      out.write("\r\n");
      out.write("        main 태그 : 현재 문서의 주된 콘텐츠 작성 영역\r\n");
      out.write("\r\n");
      out.write("        section 태그 : 구역 구문을 위한 영역\r\n");
      out.write("\r\n");
      out.write("        article(작은 토막) 태그 : 본문과 독립된 콘텐츠를 작성하는 영역\r\n");
      out.write("\r\n");
      out.write("        aside 태그 : 사이드바(보통 양쪽), 광고 영역\r\n");
      out.write("\r\n");
      out.write("     -->\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fchoose_005f0.setParent(null);
    int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
    if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("            	");
        out.write("\r\n");
        out.write("            	");
        if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("				\r\n");
        out.write("				");
        out.write("\r\n");
        out.write("				");
        if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
          return true;
        out.write("            	\r\n");
        out.write("            ");
        int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    // /index.jsp(73,13) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sessionScope.loginMember }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
    if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("	                <form action=\"member/login\" name=\"login-form\" method=\"post\">\r\n");
        out.write("	                    <!-- 아이디/비밀번호/로그인버튼 영역 -->\r\n");
        out.write("	                    <fieldset id=\"id-pw-area\">\r\n");
        out.write("	                        <section>\r\n");
        out.write("	                            <input type=\"text\" placeholder=\"아이디\" name=\"inputEmail\">\r\n");
        out.write("	                            <input type=\"password\" placeholder=\"비밀번호\" name=\"inputPw\">\r\n");
        out.write("	                        </section>\r\n");
        out.write("	                        <section>\r\n");
        out.write("	                            <button>로그인</button>\r\n");
        out.write("	                        </section>\r\n");
        out.write("	                    \r\n");
        out.write("	                    </fieldset>\r\n");
        out.write("	        \r\n");
        out.write("	                    <!-- 회원가입 / ID/PW 찾기 영역 -->\r\n");
        out.write("	                    <article id=\"signup-find-area\">\r\n");
        out.write("	                        <a href=\"#\">회원가입</a>\r\n");
        out.write("	                        <span>|</span>\r\n");
        out.write("	                        <a href=\"#\">ID/PW 찾기</a>\r\n");
        out.write("	                    </article>\r\n");
        out.write("	        			\r\n");
        out.write("	        			<label>\r\n");
        out.write("	        				<input type=\"checkbox\">아이디 저장\r\n");
        out.write("	        			</label>\r\n");
        out.write("	                </form>\r\n");
        out.write("            	");
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
    if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                    <article class=\"login-area\">\r\n");
        out.write("                        <!-- 회원 프로필 이미지-->\r\n");
        out.write("                         <a href=\"#\">\r\n");
        out.write("                            <img src=\"resources/images/profile.png\" id=\"member-profile\">\r\n");
        out.write("                         </a>\r\n");
        out.write("                         <!-- 회원 정보 + 로그아웃 버튼 -->\r\n");
        out.write("                         <div class=\"my-info\">\r\n");
        out.write("                            <div>\r\n");
        out.write("                                <a href=\"#\" id=\"nickname\">");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("</a>\r\n");
        out.write("                                <a href=\"/community/member/logout\" id=\"logout-btn\">로그아웃</a>\r\n");
        out.write("                            </div>\r\n");
        out.write("                            <p>\r\n");
        out.write("                                ");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberEmail}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\r\n");
        out.write("                            </p>\r\n");
        out.write("                         </div>\r\n");
        out.write("                    </article>\r\n");
        out.write("				");
        int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
    return false;
  }
}
